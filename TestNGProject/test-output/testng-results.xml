<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Regression" duration-ms="198" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
    <groups>
      <group name="Sanity">
        <method signature="TestClass1.method2()[pri:0, instance:TestPackage.TestClass1@527740a2]" name="method2" class="TestPackage.TestClass1"/>
      </group> <!-- Sanity -->
      <group name="Smoke">
        <method signature="TestClass1.method1()[pri:0, instance:TestPackage.TestClass1@527740a2]" name="method1" class="TestPackage.TestClass1"/>
        <method signature="TestClass2.method22()[pri:0, instance:TestPackage.TestClass2@6d7b4f4c]" name="method22" class="TestPackage.TestClass2"/>
        <method signature="TestClass3.method3()[pri:0, instance:TestPackage2.TestClass3@5c5a1b69]" name="method3" class="TestPackage2.TestClass3"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Module1" duration-ms="84" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
      <class name="TestPackage.TestClass2">
        <test-method status="FAIL" signature="method2()[pri:0, instance:TestPackage.TestClass2@6d7b4f4c]" name="method2" duration-ms="14" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at TestPackage.TestClass2.method2(TestClass2.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="PASS" signature="method22()[pri:0, instance:TestPackage.TestClass2@6d7b4f4c]" name="method22" duration-ms="2" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method22 -->
      </class> <!-- TestPackage.TestClass2 -->
      <class name="TestPackage.TestClass1">
        <test-method status="PASS" signature="method1()[pri:0, instance:TestPackage.TestClass1@527740a2]" name="method1" duration-ms="0" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="method12(java.lang.String)[pri:0, instance:TestPackage.TestClass1@527740a2]" name="method12" duration-ms="2" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://www.qaclickacademy.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method12 -->
        <test-method status="PASS" signature="method2()[pri:0, instance:TestPackage.TestClass1@527740a2]" name="method2" duration-ms="1" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
      </class> <!-- TestPackage.TestClass1 -->
    </test> <!-- Module1 -->
    <test name="Module2" duration-ms="17" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
      <class name="TestPackage2.TestClass3">
        <test-method status="PASS" signature="method3()[pri:0, instance:TestPackage2.TestClass3@5c5a1b69]" name="method3" duration-ms="1" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="method33(java.lang.String, java.lang.String)[pri:0, instance:TestPackage2.TestClass3@5c5a1b69]" name="method33" duration-ms="0" started-at="2020-02-14T15:30:14 NZDT" data-provider="getData" finished-at="2020-02-14T15:30:14 NZDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method33 -->
        <test-method status="PASS" signature="method33(java.lang.String, java.lang.String)[pri:0, instance:TestPackage2.TestClass3@5c5a1b69]" name="method33" duration-ms="0" started-at="2020-02-14T15:30:14 NZDT" data-provider="getData" finished-at="2020-02-14T15:30:14 NZDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[test2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method33 -->
        <test-method status="PASS" signature="method33(java.lang.String, java.lang.String)[pri:0, instance:TestPackage2.TestClass3@5c5a1b69]" name="method33" duration-ms="1" started-at="2020-02-14T15:30:14 NZDT" data-provider="getData" finished-at="2020-02-14T15:30:14 NZDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[test3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method33 -->
      </class> <!-- TestPackage2.TestClass3 -->
      <class name="TestPackage2.TestClass4">
        <test-method status="PASS" signature="method4()[pri:0, instance:TestPackage2.TestClass4@43814d18]" name="method4" duration-ms="0" started-at="2020-02-14T15:30:14 NZDT" finished-at="2020-02-14T15:30:14 NZDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method4 -->
      </class> <!-- TestPackage2.TestClass4 -->
    </test> <!-- Module2 -->
  </suite> <!-- Regression -->
</testng-results>
